@use "sass:map";
@use './orange/orange-palet' as o;

$theme-map: (
  "orange": (
    // Primary
    "color-primary": o.$color-primary,
    "color-primary-50": o.$color-primary-50,
    "color-primary-100": o.$color-primary-100,
    "color-primary-200": o.$color-primary-200,
    "color-primary-300": o.$color-primary-300,
    "color-primary-400": o.$color-primary-400,
    "color-primary-500": o.$color-primary-500,
    "color-primary-600": o.$color-primary-600,
    "color-primary-700": o.$color-primary-700,
    "color-primary-800": o.$color-primary-800,
    "color-primary-900": o.$color-primary-900,

    // Secondary
    "color-secondary": o.$color-secondary,
    "color-secondary-50": o.$color-secondary-50,
    "color-secondary-100": o.$color-secondary-100,
    "color-secondary-200": o.$color-secondary-200,
    "color-secondary-300": o.$color-secondary-300,
    "color-secondary-400": o.$color-secondary-400,
    "color-secondary-500": o.$color-secondary-500,
    "color-secondary-600": o.$color-secondary-600,
    "color-secondary-700": o.$color-secondary-700,
    "color-secondary-800": o.$color-secondary-800,
    "color-secondary-900": o.$color-secondary-900
  )
);

// Default theme
:root {
  @each $key, $value in map.get($theme-map, "orange") {
    --#{$key}: #{$value};
  }
}

// Alternate themes (data-theme based)
@each $theme-name, $theme-values in $theme-map {
  [data-theme="#{$theme-name}"] {
    @each $key, $value in $theme-values {
      --#{$key}: #{$value};
    }
  }
}
